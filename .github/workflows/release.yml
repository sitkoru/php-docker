name: "Release"
on:
  release:
    types:
      - released

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [5.6.40, 7.1.33, 7.2.34, 7.3.33, 7.4.33, 8.0.28]
    steps:
      - uses: actions/checkout@v3
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/sitkoru/php
          VERSION=${{ matrix.version }}
          echo VERSION=${VERSION}
          MAJOR=`echo $VERSION | cut -d. -f1`
          echo MAJOR=${MAJOR}
          MINOR=`echo $VERSION | cut -d. -f2`
          echo MINOR=${MINOR}
          REF=${GITHUB_REF#refs/tags/}
          if [[ $REF =~ ^v.*$ ]]; then
            TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${MAJOR}.${MINOR}"
            TAGS_DEV="${DOCKER_IMAGE}:${VERSION}-dev,${DOCKER_IMAGE}:${MAJOR}.${MINOR}-dev"
            TAGS_SSH="${DOCKER_IMAGE}:${VERSION}-ssh,${DOCKER_IMAGE}:${MAJOR}.${MINOR}-ssh"
            TAGS_NGINX="${DOCKER_IMAGE}:${VERSION}-nginx,${DOCKER_IMAGE}:${MAJOR}.${MINOR}-nginx"
            TAGS_NGINX_SSH="${DOCKER_IMAGE}:${VERSION}-nginx,${DOCKER_IMAGE}:${MAJOR}.${MINOR}-nginx"
          else
            TAGS="${DOCKER_IMAGE}:${VERSION}-${{ github.run_id }}"
            TAGS_DEV="${DOCKER_IMAGE}:${VERSION}-${{ github.run_id }}-dev"
            TAGS_SSH="${DOCKER_IMAGE}:${VERSION}-${{ github.run_id }}-ssh"
            TAGS_NGINX="${DOCKER_IMAGE}:${VERSION}-${{ github.run_id }}-nginx"
            TAGS_NGINX_SSH="${DOCKER_IMAGE}:${VERSION}-${{ github.run_id }}-nginx-ssh"
          fi
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=tags_dev::${TAGS_DEV}
          echo ::set-output name=tags_ssh::${TAGS_SSH}
          echo ::set-output name=tags_nginx::${TAGS_NGINX}
          echo ::set-output name=tags_nginx_ssh::${TAGS_NGINX_SSH}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.BOT_NAME }}
          password: ${{ secrets.BOT_TOKEN }}
      - name: Build fpm image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.prep.outputs.tags }}
          push: true
          build-args: |
            PHP_VERSION=${{ matrix.version }}
          target: fpm
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ matrix.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
      - name: Build dev image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.prep.outputs.tags_dev }}
          push: true
          build-args: |
            PHP_VERSION=${{ matrix.version }}
          target: dev
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ matrix.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
      - name: Build ssh image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.prep.outputs.tags_ssh }}
          push: true
          build-args: |
            PHP_VERSION=${{ matrix.version }}
          target: ssh
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ matrix.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
      - name: Build nginx image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.prep.outputs.tags_nginx }}
          push: true
          build-args: |
            PHP_VERSION=${{ matrix.version }}
          target: with-nginx
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ matrix.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
      - name: Build nginx with ssh image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.prep.outputs.tags_nginx_ssh }}
          push: true
          build-args: |
            PHP_VERSION=${{ matrix.version }}
          target: with-nginx
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ matrix.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
